<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" 	location="/resources/" />
	<resources mapping="/css/**" 		location="/css/" />
	<resources mapping="/cssmin/**" 	location="/cssmin/" />
	<resources mapping="/images/**" 	location="/images/" />
	<resources mapping="/js/**" 		location="/js/" />
	<resources mapping="/jsmin/**" 		location="/jsmin/" />
	<resources mapping="/fonts/**" 		location="/fonts/" />
	<resources mapping="/import/**" 	location="/import/" />
	
	<util:properties id="config" location="classpath:config.properties"/>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="pe.oh29oh29.myweb" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<beans:property name="maxUploadSize" value="100000000"/>
	</beans:bean>
	
	<beans:bean id="databaseProp" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:database.properties" />
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName"><beans:value>${my.driver}</beans:value></beans:property>
		<beans:property name="url"><beans:value>${my.url}</beans:value></beans:property>
		<beans:property name="username"><beans:value>${my.username}</beans:value></beans:property>
		<beans:property name="password"><beans:value>${my.password}</beans:value></beans:property>
		<beans:property name="validationQuery"><beans:value>SELECT 1</beans:value></beans:property>
		<beans:property name="testWhileIdle"><beans:value>true</beans:value></beans:property>
	</beans:bean>
	
	<!-- mybatis 연동 -->
	<!-- mapper scanner -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="pe.oh29oh29.myweb.mapper" />
		<beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations" value="classpath*:pe/oh29oh29/myweb/xml/*.xml"></beans:property>
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* pe.oh29oh29.myweb.service..*.*(..))" id="servicePointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCut"/>
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
</beans:beans>
